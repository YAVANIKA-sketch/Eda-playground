module srff(q, qb, s, r, clk, rst);
  input s, r, clk, rst;
  output reg q, qb; // Outputs should be declared as reg for sequential logic
  reg [1:0] sr;

  always @(posedge clk or posedge rst) begin
    if (rst)
      q <= 1'b0; // Reset logic
    else begin
      sr = {s, r}; // Concatenate S and R
      case (sr)
        2'b00: q <= q;    // No change
        2'b01: q <= 1'b0; // Reset
        2'b10: q <= 1'b1; // Set
        2'b11: q <= 1'bx; // Invalid
      endcase
    end
    qb <= ~q; // Complement of q
  end
endmodule
